<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[恭贺新年2020 New Year 2020]]></title>
    <url>%2FNewYear2020%2F</url>
    <content type="text"><![CDATA[恭贺新年2020 / 画师：TAiGA / 原作p站id=78665745 γνῶθι σεαυτόν.认识你自己。过去一年的最大感受莫过于此。 当然还有别的，比如对机器学习的感触等等。 对生成对抗网络的感触过去的一年，整年都在跟机器学习打交道。从三月到五月自己一直在看机器学习的文章，然后六月包括整个暑假全在跑数据炼丹。 现在看这整整两个月的宝贵时间全部“无駄”————全部做了无用功，因为自己设定的图像评判标准不对、因此损失函数也有问题，最关键的是，长期只跑100次循环以下，导致自己对于整个网络能够做到什么完全没有概念。这倒也不怪当时的我，因为我 follow 的程序就有点问题，但一直不开窍就是自己的问题了。现在回头看真是明明有一条更容易的道路，为什么不走呢？ 之后便是九月份一个月找到现在的工作，顺便对自己有多菜有了深刻的认识。毫无意外，保研的找到的工作普遍更好，很多积累并没有白费功夫。但十月份又陷入了生成对抗网络的细节泥潭中不可自拔，直到十一月才顿悟，勉强投出一份还算满意的 EI。 现在回头再去看，可以说过去的一年有半年时间完全在做无用功。这还算好，如果同样按这个标准，自己的本科生四年就没法看了————算是对过去十八年毫无享受，因此对诱惑毫无抵抗力的代价。导致这一切的，一方面是自己实践能力实在不足，另一方面便是导师引导缺失。这里不讨论后者，毕竟后者也是前者引起的，况且无论什么导师也不可能对这方面极其了解，很多时候还是靠自己摸索，主因副因我还是能够分清楚的。但有时候还是感叹，如果能有一位数学技巧高超的能够咨询的前辈有多好。 当然如果什么都怪原生家庭或者别的因素啥的，怕不是弗洛伊德上头了，作为半瓶子心理研究者肯定不能犯这种庸俗的错误。今年的经历证明，光有埋头实践是不行的，还得有一定的理论水平。更得真正动心思，走别人不提示的路径。 姑且算是一份总结在去年我二十四岁博文里，曾经对自己的缺点有两大总结：一是好形而上学而不爱动手实践，二是意志力不足所以成事极难。其实这多少有些苛刻。当第二十五年到来时，对自己了解越深入，越能够体会到自己的特性和性格由来之处在哪里。 不爱动手实践源头就是小时候泡图书馆的习惯。由于从小限制颇多，实际上实践这件事对自己实在是太难，更多的时间和经历被投入到一些无用、但能够让父母和自我感觉高的地方————比如剪报等可以说是百分之七十无用的活动上，而这些宝贵的时间和经历本来可以引导向更有积淀性的事业里面。诚然大多数父母和孩子都做不到这点，但这不是推卸的理由。若是想要留下一些作品，保存下自己灵魂或者思想————随你怎么定义的————的片言只语，便需要切实不断的努力。 意志力不足这一点可以说是通病了。一方面贪图一时享受是人之常情，你必须把控住自己才能向前不停迈步；另一方面，身体上的苦痛让人意识到，果然人是有极限的啊，有时候就算你想要去百分百尽力，身体却这里腰疼那里上火头疼，直接打断所有进程。或许这就是小时候锻炼不足成长不足的结果吧，虽然后天可以补足，但依旧让人为之忿忿不平。 随着信息获取渠道的丰富，越发的感受到，世界上那有什么天才，不过是积累的比别人多而已。虽说这块的长处必然有另一块的短处，只不过有时候那些短处在其人从事的事业与生活中影响甚微。能认识到这一点多亏《龙王的工作这本书》，虽然是本轻小说，在浅显的表层娱乐下包含有极其深刻的道理，对常人眼中的天才做出了非常易懂且极有带入感的细致描写，可以说是日本轻小说中盛开的一朵珍贵的、或许有些媚俗、但仍旧金贵的花朵。 2020年已经到了，马上自己也要转变为社畜，所有的路似乎都遍布荆棘，天堂鸟已经被刺死，就算没死，换了心境后美妙的歌声再也听不到了，所有人都被携裹入洪流，或许冲向旧制度或许走向大革命。你是谁？你从哪里来？你究竟要去哪里？我想答案是明确的，无论周围怎么样，自己都要足够清楚自己的立身所在；不管道路看见看不见，哪怕匍匐也要爬向当初设立的那个灯塔。]]></content>
      <categories>
        <category>雨滴之歌</category>
      </categories>
      <tags>
        <tag>反思，恭贺新年</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[找工作的经验 Experience of Application]]></title>
    <url>%2FWorkExperiences%2F</url>
    <content type="text"><![CDATA[大概这篇文章中最实用的点，便是推荐一个编辑简历的网站：超级简历真的特别好用，完全不需要你自己去纠结简历的模板，而且改起来特别方便。 下面的都是些闲谈。 写这篇这么晚是因为一直在忙毕设。 其实我并不喜欢写分享经验类的文章，这也能从博客的介绍问答里看出来。因为普通人的经验没什么好重复的，而大牛的经验有时又往往难以复制。所以经验大多是读来激励人但实行起来又难以下手。 不过忙活了一个月，感觉很多地方自己都可以给后来人讲一下————“要是自己早点知道就好了那种”。 首先是大概情况： 研究所：分总体和非总体，总体要好很多；分行业，航天&gt;电科&gt;兵器船舶；有工信部认证的学校和985学校很吃香，因为研究所很看重学历（包括本科）、成绩（没错，绩点很重要，挂科会白给）和党员成分，这种要求在国企和机关中也很常见，谈不上歧视，毕竟传统企业也极其看重人脉；除去企业化的一些研究所（海康莱斯等），大多研究所能给你最好的待遇就是北京户口，至于月薪，应届硕士都是一万多领到手五六千的批发水平。所以想留在北京的最好选择研究所，不想去北京的，研究所吸引力就大幅度下降了。对了还有一点，研究所不喜欢女生的程度，跟这些研究所的加班程度有关————所以常见场景是，毕业季女生一块抱怨男生好找工作，工作之后男生一块抱怨女生不忙，同部门出差加班压力全在男生这边:joy::joy::joy:（毕竟不可能要求女生出差去戈壁海岛啥的）。 企业：待遇没有吹的那么好————你得计算时薪啊！现在企业大多实行绩效年终奖不给加班费，第一年可能不跟你计较绩效，之后不加班多干活，年终奖会缩水的。对于一般人，压力努力跟薪资成正比的定律十分客观，基本通信硕士，加班多的都能给到22+（这还只是多而不是很多）。 国企：跟研究所差不多，各方面都很像，清闲不用加班。招聘季大概在企业和研究所都结束了才来，所以不用急可以作为候补，尤其是女生。 如果有第二次机会我会努力加强的点： 你cpp还是你大爷。尤其是对于做通信的，cpp可以说是每个开发岗的硬性要求。当然VHDL也不是不能找工作，但也就特别大特别大的大厂或者研究所会要，普通公司都是买U然后嵌入式解决。丢雷老母学甚python，那些做广告的吹培训班的可没有告诉你，学python跟学matlab一样，是需要你本身数学素质和学历过关的，加上近几年目测算法岗爆炸（指供给方面），除非你能发出sci或者有个给你sci的老师/师兄师姐/对象，或者你就铁了心要去研究所鼓捣建模，否则别考虑这条无论什么专业只要用过深度学习就都想掺和的学习路径吧。对了天赋异禀的去学java跟计算机的抢移动端和前端工作，毕竟java是谷歌钦定移动端第一语言。（类比于cpp是钦定的第一硬件语言，python是谷歌钦定的第一机器学习语言一样） 一定要准备好项目，项目对口一切都好说。这里的好项目是指老师给的或者你自己去外面申请的，总之至少要有个验收方————那些什么学生管理系统啊之类的就别写上去了，某hr直接说这种项目都是你们自己写着玩的没甚卵用。 一定要去实习。别管老师放不放，你自己一定要去申请，各个大厂假期都开放通道的，直接搜索就能找到。因为大厂的实习流程类似于应聘，所以实习经历很加分很加分很加分我要强调三遍。对了去实习前你得有底子，这就意味着你相当于放弃学生时代的假期，提前进入了招聘季，取舍看你自己了。 企业一定要刷题，大量的刷题。经验来看，对同一企业，笔试+面试是有一个恒定难度的。（所谓大小年对于技术类影响并没有想象中那么大）做好准备多刷题，牛客和力扣都可以，无论笔试还是手撕代码，达到有思路这种地步是不行的，必须要精益求精————我这方面就没做好，典型的便是Pony.ai的题，每一道都有思路，但实现之后要么测试用例无法全部通过，要么算法策略有毛病。（比如一道青蛙跳石头，m块石头有n种颜色，策略是临着跳或者跳同一颜色的下一块，让你求最快到第j块石头的步数。我写完代码运发现0%通过时才反应过来根本思路想的太简单了:joy::joy::joy:，而且他们这个m不是一般的m啊是特别特别特别大的m，很多直线思维做类似于这种算法题会直接超时。） 简历要有逻辑性、技术继承性、目的性，能够让人一眼看出你很匹配应聘的岗位。我就被某所的hr吐槽我项目跟毕设没啥关系（老师安排的东西我能咋办）。这方面我推荐超级简历。节省时间。]]></content>
      <categories>
        <category>雨滴之歌</category>
      </categories>
      <tags>
        <tag>appliaction</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用AutoHotKey实现你自己的任意门 Quick Search Though AutoHotKey]]></title>
    <url>%2FHotkey%2F</url>
    <content type="text"><![CDATA[毫无疑问，凡是使用AHK(AutoHotKey)的，都是懒人。但往往程序员们都是懒人，所以vim和自动补全才大行其道。也正因为是懒人，才能快人一步，用复杂的方式消灭简单重复的工作。 简单来说，有很多人好奇为什么我按几个按键就能快速搜索出我想要的结果，除了chrome+ABP(AdBlockPlus)+油猴拓展的神效之外，另一点就是AHK，毕竟很多程序员的目标都是不动鼠标完成所有工作嘛。 这是你从没有玩过的快捷键绿色软件，比起一堆国产厂商的广告快捷键软件不知道高到哪里去了，跟μtorrent一样占用内存少到令人惊讶——区区几十M而已，可谓是“点一下，跑一年，内存不占一分钱”。只要你有一点点编程基础，你也会跟我一样，爱上这款软件。 下面是我的参考文件，利用alt+各种按键一键搜索谷歌百度淘宝知乎，相信诸位一看就能看懂。请将其保存到”AHK根目录//AHKStart.ahk”，再设置开机启动加载即可。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364;;;;启动文件;;;;;;;;快速打开程序(快捷键);;;;;; 目前已经使用了的快捷键 ; !g !t !d !x !s !z !q !b !c !f; google search !g:: Send ^c Run https://www.google.com.hk/search?q=%clipboard% return ; google translate!t::Send ^cRun https://translate.google.cn/#auto/zh-CN/%clipboard%return; baidu search !d:: Send ^c Run https://www.baidu.com/s?wd=%clipboard% return ; baidu xueshu search !x:: Send ^c Run http://xueshu.baidu.com/s?wd=%clipboard% return ; shopping / taobao search!s:: Send ^c Run https://s.taobao.com/search?q=%clipboard% return; zhihu search!z:: Send ^c Run https://www.zhihu.com/search?type=content&amp;q=%clipboard% return; bilibili search!b::Send ^cRun https://search.bilibili.com/all?keyword=%clipboard%return; start chrome!!c:: Send ^c Run chrome.exe return; douban search!q::Send ^cRun https://www.douban.com/search?source=suggest&amp;q=%clipboard%return; start find everthing!f:: run, C:\3_Handler\EverythingPortable\Everything_x64.exe]]></content>
      <categories>
        <category>机械造物</category>
      </categories>
      <tags>
        <tag>autohotkey</tag>
        <tag>search</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Errno 13 Pip安装问题 Questions with pip installation]]></title>
    <url>%2FErrno13withPip%2F</url>
    <content type="text"><![CDATA[尝试下面命令时总是报错：1pip3 install tensorlayer 报错内容千奇百怪，比如： You are using pip version 18.1, however version 19.1.1 is available.You should consider upgrading via the ‘pip install –upgrade pip’ command.但是尝试了升级还是报错。 以及： Could not install packages due to an EnvironmentError: [Errno 13] Permission denied: ‘/home/xxxxxx/.local/lib/python3.6’Check the permissions.但是按照github上解决方案 仍旧报错。 查询了下发现使用pip替代pip3即可解决。原因大概是，pypi的路径问题。最直观的解释如下： (tf2) $ pip -Vpip 19.1.1 from /home/xxxxxx/anaconda3/envs/tf2/lib/python3.7/site-packages/pip (python 3.7) (tf2) $ pip3 -Vpip 18.1 from /home/admin/anaconda3/lib/python3.6/site-packages/pip (python 3.6) 由此可见，在py3为默认python版本的当前，传统意义上pip为py2安装目录、pip3为py3目录的解释已经失效了。 实际上，pip为系统当前环境默认提供的安装路径，在本问题中是anaconda某个环境下默认安装目录，因此直接调用即可。 而pip3则仍是系统默认下的py3安装目录，也就是最初管理员设置的目录下，以区别于linux的py2库。 所以使用pip安装不同于conda，需要事先想好安装到哪个库上。]]></content>
      <categories>
        <category>机械造物</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[服务器安装英伟达驱动与GCC版本问题 Questions About Nvidia Driver and GCC Version]]></title>
    <url>%2FNvidiaDriver%2F</url>
    <content type="text"><![CDATA[通常ubuntu安装显卡驱动：先屏蔽自带的nouveau，重启后确认nouveau不在运行，ctrl+alt+f1进入Init3，之后 sudo service lightdm stop终止xwindow服务，给予驱动读写权限，执行即可。此后只需要startx &amp; sudo service lightdm start即可恢复原来桌面。 但这次在为Dell Precision 7910服务器安装显卡驱动时屡次失败，提示为： Unable to determine the version of the kernel sources located in ‘/lib/modules/4.15.0-51-generic/build’.以及CC version check failed: The kernel bulit with gcc version 4.5.0 but current compliler is cc 4.8.5. 记录下环境，系统为Ubuntu 16.04 LTS，显卡为2080Ti。 首先根据提示检查 ‘var/log/nvidia-installer.log’。检查后发现正如上文显示的一样，gcc版本不对。随后我们升级了主板UEFI(BIOS)，仿照网上教程下载编译安装了gcc 5.4，虽然 gcc –version显示gcc版本已经更改为5.4.0，但再次尝试依旧失败。 之后绕的弯路此处不表，结果发现还是自动安装gcc后就可以正常安装驱动了，原因不知道为什么，而且一查安装的是gcc 4.3.1而非4.5： sudo apt-get autoremove gccsudo apt-get install gcc]]></content>
      <categories>
        <category>机械造物</category>
      </categories>
      <tags>
        <tag>server</tag>
        <tag>ubuntu</tag>
        <tag>nvidia</tag>
        <tag>driver</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[死锁 Deadlock]]></title>
    <url>%2FDeadlock%2F</url>
    <content type="text"><![CDATA[请求对不起，我爱你，但这是我的故事。 这是他发送给她最后一句话。是时候结束这段关系了，他如是想到。自从他意识到彼此的关系已经超过咨询师与来访者的边界后，这种危险的游戏已经持续了一段时间。 对方不是一个多么特别的人，至少在这位年轻心理咨询师简短的从业经历中不是。犹豫又脆弱，缺乏自信心，但触及伤口深处时又会做自作聪明的抵抗，似乎每一个寻求心理咨询的人都是这个样子。但对方似乎又有所不同。本来咨询师和被咨询对象间不应该有业务以外的交集，可是对方似乎执着于绕过这道冰冷的防线。 多么无谓的举动啊，他想，不过也难怪，当你从事这一行的时候，总会有人认为他们可以跟你发展成更亲密的关系；而一位成熟的咨询师应该像优秀的外科医生一样快速切除病灶，并让双方的煎熬最小化。 但事情随着时钟转动发生了改变。空气中的灰尘会在阳光照耀下显性，微小的情绪也会在交谈过程中蠕动。来访者的痛苦来源自另一个人，而他居然开始有了嫉妒的情绪。若是定期见面也罢，但她似乎以少许温柔为氧气一般毫不节制的摄取，并以自己的情绪为刃、以自己生命为人质强行索取。雨夜的闯入不止一次，路途中的临时来电更是不计其数。咨询师热爱他的职业，是因为他喜欢观察人类反应——拜其所赐，从小大大他一直能够成功的隐藏自己的才能，什么都能做的刚刚好，足够优秀但不会引起别人注意，这样便可以趁别人不留意窥视他们的想法并加以引导；但正如占卜师不会占卜自己命运一样，他不喜欢观察自己。他刻意无视了自己潜意识里想要成为英雄的欲望，然后毫不保留的、也是些许违反原则散发出温柔——管他呢，每个人都有自己的原则。 而她的出现恰好成为助燃剂，油锅起火不应该泼水，危险关系越试图急刹车越会侧翻。我是不一样的，他想，我一定要趁早将危险斩除，这是我的故事，没有人能够操纵我的感情，没有人！我对你来说仅仅是玩玩而已吧，是个连伤害你都做不到的人畜无害的普通人吧，但你却占据了我的脑海，这样也太狡猾了吧，你正在玩一场危险的游戏，现在是我拔掉电源的时候了。 “但是，只有你能够看到我啊。”她只回复了这句话；回复消息的手机号码跟他的一样。 “你好狡猾啊。”他喃喃说道，扣下了扳机。 等待对不起，我爱你，但这是我的故事。 这是她写下的最后一句话。是时候结束这段关系了，她如是想到。自从意识到文笔下的他具备了自我意识之后，这种危险的文字游戏已经持续了一段时间。 为什么会是这个样子呢？她不禁说出声来。身为朝不保夕的网文作者，每天能够按时交出足够字数的只言片语就足够了；虽然听说过杰出作家笔下的人物会有自我意识，甚至会做出违抗作者本人意识的行为，但这万万没想到会发生在自己身上。 难道是我终于疯了？她不禁嘲笑自己。拜托我又没有想那么多，虽然有时候会失眠，但是绝对不会想什么宇宙命运啊身后之事啊这类宏大又可笑的命题，我更喜欢考虑明天吃什么东西。 又或者是缺男人了？她在床上翻了个身，压到了昨天吃完还没扔的零食袋。说实在的那个男人有啥配得上自己的？自己的外貌怎么说也是普通偏上，性格天生外向，朋友称不上很多但是想去哪总会有人接应，虽然也有不怀好意接近自己的，但那种人在掩饰目的上表现的令人发笑。她闺蜜就曾经吐槽过，这些男人总吹嘘 good end 是自己一手谱写的，但真正的导演永远是我们而已，甚至连貌似偶然的见面背后都有多少规划。说到底现实的人最爱的都是自己而已，没错，我没有做错什么。 仅仅有时候有点孤独罢了。 但就算是孤独我也不想表现出来啊，她对自己说，只是有时候，有一些时候会想他而已。于是她开始在小说中以那个男人的外表塑造了个龙傲天，当然这位龙傲天很善于隐藏自己实力，这样读者们才会有买账；况且就算他们在留言区大骂也不过是在帮自己骂前男友，她不会有一丁丁的沮丧。 相对应的，女主角的形象一直虚拟缥缈定不下来，像雾一样看不透摸不清，只能写三千字是三千字。这究竟是为什么呢？当她最终警觉到时，原定的开挂上帝视角爽文居然变得极其现实，而那个女主角分明是自己的样子，连哭花了的眼妆也在镜中似曾相识；每次码字不再是绞尽脑汁的事情，因为所有痛苦所有的难过似乎都会在字里行间内化解，不对，是在他的温柔中化解，就像放入火锅的冻豆腐，无论之前多么坚硬都会变得被美味的填充起来。虽然还能看到前男友的痕迹，但那明显是一个更完美的人，更温柔更更帅气的人。 喜欢上甚至依恋上一个幻想的人很常见，但他是只存在于自己的幻想中啊；更令人恼怒的是，他似乎开始逐步挣脱其自己，就像当年死活不主动提分手、施加冷暴力的前男友一样，明明在他人面前做出亲密的样子，一旦拉开距离就会······ 不行，这是我的故事，没有人能抛弃我！就算是你也不行！她愤怒的敲下字节，将他的反抗粉碎，让他无法抗拒自己的出现；将他的行动锁住，让他的温柔不散播到别处；将他的眼睛遮蔽只让他看自己一个人······一直到他手机短信中只有自己的收信为止。你说你爱我，但是我不相信，她不断发送这一条消息，哪怕是在他怀里。这是一场危险的游戏，但是只要进入就别想着毫发无损的逃脱出去，而我是导演，我是唯一的导演，我一定、一定会赢。 于是她写下了最后一句话，却没有得到回应。她把笔记本扔到地上，浇上了汽油，“这是我的故事啊，只有你能看到我，你是我的骑士啊”，她一边流着泪一边点燃了打火机，“没有你我该怎么办？”]]></content>
      <categories>
        <category>雨滴之歌</category>
      </categories>
      <tags>
        <tag>科幻小说</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[实验室服务器深度学习环境的建立v2.5 How to Start DeepLearning in Server v2.5]]></title>
    <url>%2FHowtoStartDeepLearninginServer%2F</url>
    <content type="text"><![CDATA[前言：此页为R.E.W.团队成员设立。诸位可以通过检查该网页评论区最新评论，获得两台服务器最新的ip地址。在此基础上，要搭建一个深度学习的服务器环境，记录下经历和思路。 v1.2@190401 更新：更新anaconda安装后重启的注意事项；更新远程登录jupyter方法。 v1.5@190408 更新：IDE。 v1.6@190610 更新：Anaconda国内镜像源停止服务。 v2.0@190627 更新：推荐Keras和Pytorch；更新第三台服务器；管理员须知更新。 v2.1@190717 更新：推荐VSCode作为默认编辑器；增加硬盘占用检测手段。 v2.5@190731 更新：回收站的空间占用问题；推荐Tmux。 1. 远程服务器环境规划虽然此结构不绝对，但本人仍然建议按照此步骤配置环境，即：1234567graph TDA[Docker虚拟机容器] --&gt;B[Anaconda环境容器]B --&gt;|静态| C[TensorFlow]B --&gt;|动态| D[Pytorch]C --&gt;|API封装-抽象层次较低| E[TensorLayer]C --&gt;|API封装-抽象层次中等| G[TFLearn]C --&gt;|API封装-抽象层次最高| F[Keras] 注意：抽象层次越高越容易入门，但运行速度越慢！这是显而易见的。 此处推荐Keras。基于TF的Keras已经融入到了TF2.0版本中，其简单易用的框架结构令其很容易搭建成熟的神经网络——我曾花了很长时间学习TF，但最后发现我只需要Keras就够了。其次便是Pytorch，尤其是TF现在版本混乱，1.0与2.0版本不互通，更细致的调节和搭建框架，Pytorch要比TF阵营优秀的多。 如果让我推荐，我还是推荐TL，因为其更底层，也有最大量的中文用户。（其实真以后要从事开发工作，应该学习pytorch这种才对。） 硬件上，三台服务器，R720拥有两块P4000显卡，R740拥有一块P100显卡。相关驱动、CUDN及CUDNN已经安装。第三台服务器T640安装了一块2080Ti显卡，即将上线。 需要注意的是，于上路径图不同的是，实验室服务器并没有部署Docker——现任管理员的时间实在太有限、无法在去研究这项技术，本系也没有操作系统上的大牛。下一步如果有人想要研究，请参考下述链接。 因此目前暂且采用一个管理员账号+若干普通用户的账号划分，且两个服务器独立运行。普通用户也没有预装Anaconda，但为大家准备了安装包，具体安装步骤见第二章。 1.1 推荐Anaconda的原因推荐大家都按照Anaconda的流程走一遍，Anaconda是个类似虚拟机的环境，安装错了也可以删除，彼此环境不会相互影响，防止你在某一环境删除无用安装包时把整个环境乃至系统搞坏掉。并且自己走一遍，有助于了解深度学习的环境，建立一个自己熟悉的场景。只享受嗟来之食是不可取的，你连安装了什么包都不知道。 1.2 关于编辑器推荐Jupyter Notebook作为.py编辑器，Anaconda自带。 IDE编辑器这块，不再推荐Jupyter，原因如下： 不支持断点 无法查看运行中数据 debug困难 Jupyter Notebook 适合利用python进行科学运算、数据挖掘、成果展示的领域，但不适合我们进行算法设计与研讨。 推荐Anaconda自带的Spyder 推荐VSCode，或者PyCharm。两者都类似MATLAB，易于上手可以debug。尤其突出的是，两者都有很美观易用的界面。尤其是VSCode，由于其插件的广泛性，类似于NPP(NotePad++)但更完美更方便。实际上，本网页就是在VSCode的markdown插件帮助下编辑的。而且相比较于spyder更加成熟，在与terminal的结合上更完美——你是不可能在spyder的命令行中使用conda命令的，但VSCode就可以完美兼容，甚至，其自带的terminal比mobaxterm提供的还要优秀。 与其形成搭配的是tmux多窗口/终端复用软件，能够将你的terminal不断划分，详情请自行搜索或者参考我的登录服务器教程。 2 普通用户须知2.1 安装包位置选项一：自己下载一个安装包，上传到服务器，安装。你可以尝试pip等，但下载速度会慢的要命。选项二：输入 &gt; /home/sela/Anaconda3-5.3.1-Linux-x86_64.sh 按照引导和网上教程安装。 请注意：安装anaconda后请重新链接服务器，这样~/.bashrc才能在系统中更新，添加的conda命令才可以被找到。 2.2 修改conda安装源因各种因素影响，Anaconda国内镜像源停止服务，可以访问的也将其重定位到官方源。之前修改过conda源的同学请回滚设置。这是第一要务——否则你只会会看到几kbps的网速。具体参考下述网页 。 2.3 使用pip和conda命令安装环境2.4 TensorFlow框架提示CPU有加速的编码？出现“Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA”？我们都用tf-GPU版，这个提醒是针对运行tf-CPU版的，无视即可。 2.5 不再推荐 Jupyter Notebook 作为主力IDE。2.5 Jupyter Notebook 启用时提示Firefox已经在运行怎么办？如：“Firefox is already running, but is not responding. To open a new window, you must first close the existing Firefox process, or restart your system.”因为此时别人也正在使用Firefox浏览器。因此建议以远程登录方式调用Ana，参考下述语句： &gt; jupyter notebook --ip=服务器ip --allow-root --no-browser &amp; 其中，服务器ip由“ifconfig”获得，最后的“&amp;”是指后台运行该命令，直到mobaxterm的本窗口（session）关闭才释放。再次期间使用ctrl+c只会让其在后台运行，输入“fg”则会将这个后台运行的命令再次提交到前台。之后你只需要复制它给出的诸如“http://125.xxx.xxx.xxx:8888/?token=xxx”到**你本地电脑**的浏览器打开即可。如果你不理解这段话说的是什么，请遇到此问题时再看。 3 管理员须知3.1 如何查看网速~如何查看网速？以740为例，首先ifconfig查看发现网卡为eno2，其次ethstatus -i eno2~ nethogs查看网速，具体使用方法请自行搜索，但是运行需要root权限。 mobaxterm升级到v11后，链接后左下角自带系统监控功能，只不过需要注意里面速率单位是Mb/s而不是常用的KB/s，此中区别不足为外人道也（滑稽）。 3.2 得到新机器的第一件事修改各个命令安装源为国内源： &gt; apt-get源： https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/ &gt; ~~conda(anaconda10x)源： https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/~~ &gt; pip(ubuntu16)源： pip install pip -U pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple &gt; dpkg(ubuntu16-deb)源： https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/ 管理Anaconda等普通用户的安装包：需要赋予”chmod c+x”权限，否则普通用户访问非自己目录下的安装文件会显示”Permission Denied”。 普通用户的建立和管理，如果十位以下尽量不要通过脚本添加——除非你确信脚本没有问题。因为一旦添加，删除用户时必须用另一命令再释放用户所在目录——否则再次添加同一名字的用户后，该用户会发现自己的目录权限不属于自己。 3.3 安装显卡驱动参考 安装cudnn参考，请注意这仅仅是cudnn安装参考而不是cuda安装参考 那cuda安装步骤呢？安装NVIDIA显卡时提示你在运行xwindow，安装失败怎么办？Ubuntu16.04，P100实测可行：编辑/etc/modprobe.d/blacklist.conf，添加“blacklist nouveau”；然后kill掉lightdm程序，ctrl+alt+f1进入命令桌面sudo sh安装驱动，之后启动lightdm，重启按下ctrl+alt+f7。 安装完如何修改系统分辨率？ vim /etc/default/grub #GRUB_GFXMODE=? 3.4 linux系统硬盘空间管理 如何添加硬盘？参见Ubuntu 16.04开机自动挂载硬盘分区。 如何监控硬盘占用存储，以及各个用户的存储占用？ 12df -hdu -sh /home/* 此处尤其需要注意的是，有时候系统log和回收站也会占据大量空间，前者多见于网站后台与服务器端，后者多见于开发环境。通过下述代码展示： 12sudo du -s /home/*|sort -nr|head -3 #显示占用空间最大的三个人sudo du -hs /home/*/.local/share/Trash/ #显示回收站占用 其他杂项 如何监控其他用户的kill行为？参见该我的进程去哪儿了，谁杀了我的进程 提到的audit工具。]]></content>
      <categories>
        <category>机械造物</category>
      </categories>
      <tags>
        <tag>server</tag>
        <tag>ubuntu</tag>
        <tag>deeplearning</tag>
        <tag>anaconda</tag>
        <tag>tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[二十四史批判提纲 My 24 Years]]></title>
    <url>%2FMy24Years%2F</url>
    <content type="text"><![CDATA[余之二十四史，始于乙亥，止于己亥。浩浩汤汤，不可寻复；渺渺茫茫，岂知未央。岁月流转又到本命年，大年初一当回首立志，继而愤然前行，留岁月风尘于身后。 大概的划分一下，余于人间行二十四年，六年一轮回。早期的六年是幼年期，不知朝夕；然后的六年是小学，赋予了读书的爱好，也从另一方面埋下了诸多隐患；其后便是求学的六年，可以说大多数基础都是这一阶段打下的，直至今日都在享受其余泽，然而偏行偏远，终至于不覆；最末便是旅哈六年，哈尔滨是一个可爱的城市，然而却在其中找不到余的影子，按理应是最欢乐无忧的日子让余更加偏行，大环境固然是原因，但余自己的问题更大更无可辩驳。三六十八，成年六年，弱冠四年，回首竟惊觉往事错误如此无可弥补，以至于斯，固有所成就，更空留遗憾无数，故著此二十四史批判提纲以正视听，明是非。 余之谬误其一，亦是最大恶，莫过于好形而上学、好信息流、好空谈。此为诸恶之首，使得诸多优点劣化。固然眼界高远、理论深刻可以辅以明是非、辨时局之变，然不付诸于行动，使得理论空有理论书本空有书本，直接失去了理论存在的意义。余之智力不超于常人，若整日沉迷于信息流，沉迷于高屋建瓴为惊人之语，便无力无法行实际之事，更与实践脱节以至于理论偏行无法纠错。 余痛心疾首，这种错误大概从祖上便有，记事时长辈们便好辩论更好理论，好政治也好酒桌之谈，唯独在身体力行上有所欠缺——自然空谈是社交之润滑油亦是人际之网，是必需品，但如此沉迷理论、信息之中，对于余这种立志以实事求是之技能而非嘴皮立身之人过于浮夸。何况，这种信息流、仿佛一切在自己脑中的成就感过于令人沉迷，使人无可自拔，不仅会影响实践，更会导致言谈高于言行，谓人以空谈家的形象，到了实践千尺落差狐狸尾巴自现贻笑大方。 其二，意志力不足。言谈之事确之凿凿，行路之时拐扭七八，定之理论实践一半，离泉一寸弃置而去。且说诸多规划如作息、学习，余好空谈好计划，但十有八九无法按照时间线付诸行动，莫非更多问题留待后世？此恶与首恶叠加，余之遗憾事大多因此两者而起。 行笔至此，兀然觉得此中谬误莫过于此两者。与此两者相比，其余问题皆为次要，比如保守的家庭环境，或者阴晴不定的心情。说到底还是图样图森破，有些道路自己选择了便要有走到底的决心，切不可羡慕他人。他人行畅快之事久矣，余不可行之；他人行罪恶之事多矣，余不可从之。 说到底，此时愉快，未来吃苦；此时吃苦，未来愉快。取之自己，用之自己，人生之修行大多如此，不可能所有雨露都均沾。 余之打算既已明主要矛盾，便可要切而行之。毕竟未来六年更是艰难之六年，无数问题轮流转——立身、成家、事业、家庭、行天下。 首先便是实事求是，诸事不可付于流水账，要踏实的去做；学问更是如此，要切实的去探寻，讲给自己听确保从未了解之人亦可了然于心没有问题。 其次是少说多做，未雨绸缪，毕竟多用功肯定有效，虽然现在未必能见到；要少夸夸其谈，不是自己领域内的事物不去辩论不去探讨，酒桌之谈可以休矣，多去倾听他人言语，少说多听少说多听少说多听，此为不二法门。要辨得情绪辨得阴晴，方可行诸事之益。 再次是不留恋温暖区、不沉迷于享受。午睡没有也罢，饭菜不可口也罢，刻苦也罢费力也罢，行大事之人不可贪恋此等狗窝。过去一年余犹豫不决之毛病已改善良多，余下便是一定目标便上路切身行之，履行时间线。 最后是坚定信心，不钦三羡四，迎难而上。行自己之路，见未识之风景。要对自己负责，对自己所做的事情、自己的过去的行为负责。家庭、环境等外界因素仅仅是次要的，重点是自己的决定和行为，不要怂不要退，掘去自己的退路，大步向前不向后看。]]></content>
      <categories>
        <category>雨滴之歌</category>
      </categories>
      <tags>
        <tag>反思</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记两次系统崩溃后Zotero数据库的恢复历程 My Zotero's Stories]]></title>
    <url>%2FZoteroTutorial3%2F</url>
    <content type="text"><![CDATA[第一个故事：更换系统后如何找回丢失的Zotero数据库？ 早些时候，把系统玩崩的我十分尴尬的面对装有着几百兆论文和笔记的Zotero数据库的恢复问题。请注意，这时候我的系统已经崩溃了，虽然C盘以外的数据还幸存（这从侧面印证了不把软件数据存储在系统盘的重要性），但毫无疑问，当我重装完系统后打开F盘的Zotero时，显示的是一片空白。 虽然其官方说明中表述“相对路径下只要文件结构相同就可以在不同电脑上访问这些附加”，但此时的我无论怎么更改设置都无法将硬盘上原来的数据库文件导入回去。 无奈之下我打算重新走一遍Zotero的安装过程，并吸取教训进行云同步。结果在边撰写本教程边试图进行OneNote同步的过程中，以外的恢复了原来的数据——原来将Zotero 编辑-首选项-高级-文件和文件夹-数据存储位置 设置为原来的文件夹并不能让Zotero自动恢复原来的数据，你需要先将数据存储位置改为默认，然后将原来文件夹的内容拷贝进去，重启Zotero你就会发现之前的数据库文件完美恢复。 此刻我不得不感谢Zotero软件的巧妙设计，直接节省了预计三四天找回文献的恢复时间！ 顺便提醒一下，还在使用Zotero的诸位一定要通过坚果云、OneDrive（教育网内ipv6完美访问）等云盘同步，再不济也要每过一段时间就 文件-导出文献库-RDF（笔记文件双选，你可不想弄丢上面各种标记的pdf文档吧），不能单单指望我这种应急方法。 第二个故事：复制粘贴角标居然不需要再次导入文献？不知道诸位有没有遇到过，新版word打开老版.doc，尤其是包含大量mathtype生成的公式的.doc直接卡死的情况。当时刚重装完系统的我便遇到了这种情况，再想办法编辑那些公式难如登天直接word闪退。最后我被迫一小段一小段复制粘贴到新的docx中。（从那时起我坚定了抛弃流氓代理mathtype使用国产良心AxMath，或者LaTeX的决心。） 结果，本以为所有的参考文献都需要重新导入的我惊喜的发现，无论是我新添加的引文，还是简单copy保留角标的老文章里的引文，都按照文章顺序直接重新进行了角标排序、并在文章尾部生成了新的参考文献列表！ 此刻我才发现，对于Zotero来说，只要你的脚标格式不变，只要你的文献库不动，复制到别的word中你仍然可以直接生成引文！这个设计太方便那些写文献综述的研究者了，这种贴心的设计令人惊讶不已，更坚定了我作为Zotero自来粉的决心。]]></content>
      <categories>
        <category>机械造物</category>
      </categories>
      <tags>
        <tag>zotero</tag>
        <tag>tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我自己的Zotero初始化步骤与注意事项 My Personal Zotero's Tutorial]]></title>
    <url>%2FZoteroTutorial2%2F</url>
    <content type="text"><![CDATA[正如前文所言，我个人是将其用作一种知识管理工具而非简单的文献索引工具，所以本文中，我会试图挖掘Zotero一些有趣的使用方法，并提供现有问题的解决思路。 访问官网链接安装软件本体和各浏览器插件； 如下图所示，编辑-首选项-引用-获取更多样式 来安装国标GB/T2005格式或者其它你需要的格式； 编辑-首选项-导出 设置默认导出格式；点击 文字处理软件 获取word插件。 请注意本步骤会导致英文参考文献作者名全部大写，解决方案参考本文步骤7。 如下图所示，信息栏中选择其它，这样能够十分方便的按照自己的tag排序论文； 然后如下图所示，点击文献——具体导入文献方法相信不用我去讲——在右侧添加tag，并在左下角给tag添加颜色，之后你就可以直接选中文献-按数字键1、2、3等直接添加颜色。 实际上，也是我最开始寻找文献管理软件的初衷——希望能找到一种给文件不改名添加tag的三维组织方法——也是我对Zotero一见钟情的地方之一。 而Zotero恰好提供了两种外加我自己发掘的“其它”这三种组织方式，如前图所示，我们可以将研究方向上的大类划分文件夹，然后同一个项目工程相关的标注同一种颜色的tag（颜色标记可以通过数字键快速完成），最后再细致的划分，将自己提取的文献的梗概和重点填入“其它”一栏。除此之外，还可以通过Adobe对pdf进行编辑、用Zotero提取笔记，经过极致细分和同步，确保随时随地组织你的文献和想法。通过这种方法，你再也不用一个个点开pdf去回想文章内容，也不用担心更改文章名字会影响windows文件夹排序，通过其它一栏，便可以直接查看文章主题、回想文章内容。 因此，从某种程度上来讲zotero是增加了索引功能去除文件浏览器的印象笔记，这种产品思路就明显要比架构蹩脚、难以操作的Endnote不知道高到哪里去了。然而由于习惯问题，国内广泛推荐Endnote，正如国内众多杂志社将Mathtype列为投稿标注一样，实际上国产Axmath或者LaTeX要更加优秀、更加符合大家的操作习惯。 zotero通过onedrive同步，参见张思功的教程。 那么Zotero如何不联网就能导出数据库呢？ 文件-导出文献库-RDF（如下图所示；请注意要笔记文件双选，毕竟你可不想弄丢辛辛苦苦写的那些tag和“其它”吧）。 请注意使用zotero一定要通过坚果云等云盘同步（官方账号同步空间有限），再不济也要每过一段时间就备份一次数据库。否则丢失数据库后你做的分类和笔记现阶段很难找回，除非你像我一样硬盘没有受到影响。 Zotero浏览器插件失效怎么办？ 十有八九是系统防火墙没关。可以通过在浏览器打开http://127.0.0.1:23119/connector/ping来检查，如果所有浏览器都无法打开，肯定是防火墙的问题。 我的文章中，所有的参考文献，英文文献作者后的’etc. al.’全部变成了中文的“等”该肿么办？ 这是由于你设置了Zotero的语言为中文所致，目前没有特别的解决办法，直接word关键词替换吧。 我的文章中，所有的参考文献英文作者名全变成的大写怎么办？ 参考Zotero 参考文献英文作者名字全是大写怎么办？急死啦。 即找到Zotero文件夹下的（windows下全盘搜索推荐everything） 、也就是步骤2中的国标文件chinese-gb7714-2005-numeric.csl，然后用第三方txt编辑器（推荐Notepad++）打开，将下面的第一句替换为第二句： 12&lt;name-part name="family" text-case="uppercase"/&gt;&lt;name-part name="family" text-case="capitalize-first"/&gt; 此处推荐第三方编辑器的原因是，我在使用中发现调用Zotero自带的样式编辑器，就算修改完也无法更新国标文件，不知是不是新版本普遍存在的bug。而且就算你这次修改完国标样式文件，下次启动Zotero时它又会从网上更新该标准，这样你又得修改一次。我试图给国标文件作者发邮件，但是邮件被拒收了，也不知道怎么提交修改后的文件给Zotero官方，所以每次我生成索引前都改一遍样式文件，虽然有点小麻烦但是习惯就好。]]></content>
      <categories>
        <category>机械造物</category>
      </categories>
      <tags>
        <tag>zotero</tag>
        <tag>tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为什么选择Zotero而不是Endnote？ Why Zotero?]]></title>
    <url>%2FZoteroTutorial1%2F</url>
    <content type="text"><![CDATA[不能打架，不能打架。Zotero好处都有啥？谁说对了就给他。浏览器装了Zotero，网站论文的元数据都可以直接抓取啦；浏览器装了Zotero，无论pdf还是豆瓣维基都能一键下载啦；文献软件都涨价，开源免费的Zotero良心大，云同步能异地获取啦；pdf提取参数自动化，还能按照tag梳理文献顺序啦，再也不用调用文件夹。 论文加了Zotero，只要脚标在数据库在，word崩溃丢失索引都可以自动找回文献的功能顶呱呱。论文加了Zotero，再也不用手动导入.enw，就连网页豆瓣这种奇葩索引都可以自动生成多妙啊。 美国·圣地亚哥 咳咳，以上是金坷垃版Zotero优点介绍。简要的说便是：Zotero更类似加了索引功能的印象笔记，无论是界面美观程度，还是适应用户操作习惯，或者对角度组织文献上，都是首屈一指的。我个人曾经为了不更改文献pdf名称也能一眼看过去就能知道这些文献内容伤透了脑筋，几乎尝试过下面各种软件，最后得到了这个结论（此处偷懒，直接搬运我在知乎问题有没有什么比较好的文献管理、阅读、笔记的软件下的答案）： notefirst: 已经很接近我个人的要求了，免费，软件内双击能直接打开pdf，但是会有英文名bug（显示pdf英文字母间没有空格），导入操作复杂（自带的插件被谷歌标注为恶意软件chrome没法装），word加载项不能用，加上好久才更新一次，弃之，实在可惜； noteexpress: 最新版本的没有破解只能建立一个库，正版太贵（九百多软妹币的价格），破解版本甚至需要你输入别人的账号密码——真心不安全；但是，如果你所在学校提供正版的话，还是很推荐这个的，我一些同学用的便是学校的正版，据反馈很不错； citavi6: 根本没办法处理中文文献，英文处理起来倒是极其顺手；本地文献导入会有各种bug，各种诸如CNKI之类的被认为是作者名，这一点就很尴尬了；虽然在国外评价很高，但国内还是有点难上手； docear: 如果这软件真的有宣传中那么完美，那么它早就灭掉endnote了。使用逻辑需要适应，改动信息操作复杂，对中文文献支持惨不忍睹，然而它的思维导图功能是真的好啊，可以拿出来作为专门软件了，界面设计的也真的很漂亮，可惜可惜，窃以为，只看英文文献的、在墙外的专业研究者最适合这个软件； mendeley: 因为收费问题没尝试过。据说功能跟zotero不相上下，但是容易崩溃，word插件有引发卡死问题（这个好解决，也不是难题——毕竟上面有些软件连word07以上的插件都导不进去）。最大问题或许还是对中文的支持上。 endnote: 我最开始想要换掉这个软件的缘故是，双击查看原pdf会莫名其妙的崩掉。坦白来讲这个软件是最适合本科生去写写毕设用的，不需要你去调试，拿来导入个国标后就能用，基本不会有导致你毕设word论文崩掉的bug。而且这个软件国内普及率最高，大多数学校都有购买。但是想要把这个用好用活是需要花点心思的，这个心思主要花在记住其功能的右键路径和调试上——譬如我想给一个pdf加个标签，我得选定后再右键选择再在一个简陋的框内输入；我想要在其内置pdf浏览器看一眼，得双击后再切换tab，还没有办法通过鼠标滚轮调整界面大小。这也是为什么我一直吐槽说，这个软件的UI设计是反人类的，它没有将一种“理所当然”的思维放在里面（这种思维是长久使用一个操作系统培养起来的，诸如快捷键等等），从某些角度上来讲，这“确实是一款专业软件”。 zotero: 最后介绍这个让我拍案惊奇相见恨晚的软件。妙啊！对英文文献的识别率居然比endnote还高——虽然对中文pdf直接导入识别率基本为零——但是它插件厉害啊，根据当前界面变换插件的小图标是个萌点，而支持各种平台各种浏览器则显示了其大杀器的本性，比在谷歌学术或者百度学术手动一个个点击下载cit方便多了，最让人意外的是，居然支持豆瓣和wiki等站点，还可以直接保存网页截图；有插件允许监视系统一个文件夹，比如win下的download，你下载的pdf一步入库，根本不需要文件管理器；界面超级漂亮，原生中文界面真的很养眼，让endnote惭愧的低下了头（英语渣平时分辨论文题目就够累了还让我分辨你那些杂七杂八颜色相近的英文按钮）；能直接双击打开原pdf——如果软件内置的pdf浏览器不够强大，还不如交给第三方软件去做，很多软件比如endnote就错在这里；最绝的是其本身可以关联别的云盘——即使你不用官方的账号照样各种云同步，简直不能再良心啊；我能想到的最搞笑的用法，是用它作为云盘管理软件和代替win库的软件，将视频图片一股脑装进去再分类同步。（当然并不推荐这么做，毕竟不是专业数据库软件，导入的内容过多会特别卡） 另附：一些详细教程的参考链接：第一必然是官方教程；然后是国内较早一批撰写Zotero5.0教程的马特浩倪的Zotero教程和大神出没的豆瓣讨论组；最后致敬最早的探索者之一阳志平老师的Zotero教程，相信国内大多数人都是最早通过他的教程才开始了解使用zotero的。 当然，您可以点击本文末尾的zotero标签来查看本博客中zotero相关教程。相信您读完Zotero崩溃后，文献神奇恢复的经历后会一定对Zotero设计之巧妙有更深层次的理解。]]></content>
      <categories>
        <category>机械造物</category>
      </categories>
      <tags>
        <tag>zotero</tag>
        <tag>tutorial</tag>
        <tag>endnote</tag>
        <tag>skilltree</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客提交谷歌站点地图的几个小问题 Questions About Google Sitemap]]></title>
    <url>%2FQuestionsAboutGoogleSitemap%2F</url>
    <content type="text"><![CDATA[为何hexo博客在谷歌控制台中提交站点测试后，报错“此位置的 Sitemap 不允许此网址”？ 请检查博客文件夹下_config.yml中，url:后一定要更改为自己的域名。 为何HTML验证个人博客时，谷歌总是提示验证失败？ 如果你用的hexo，请检查谷歌console中显示的提取结果，正常应该是类似“google-site-verification:吧啦吧啦”。 如果不是，请注意要将下载下来的google巴拉巴拉.html直接放置在生成的public文件夹中，而不是像我一样图省事放在source文件夹中——这样hexo生成时会修改这个网页导致谷歌识别失败。 hexo g 时总是提示FATAL can not read a block mapping entry？ 请一定要注意前后文，注意不要重复设置同一部分（比如有两个 sitemap: ）；注意冒号后该有的空格一定要有，虽然最新版的hexo对此似乎已经不是很敏感了。]]></content>
      <categories>
        <category>机械造物</category>
      </categories>
      <tags>
        <tag>question</tag>
        <tag>google</tag>
        <tag>sitemap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MobaXterm登录服务器详细教程v2.0 How to Link Server Though MobaXterm v2.0]]></title>
    <url>%2FHowtoLinkServer%2F</url>
    <content type="text"><![CDATA[此页为R.E.W.团队成员设立。诸位可以通过检查该网页评论区最新评论，获得两台服务器最新的ip地址。这两台服务器分别是DELL POWEREDGE R720与R740。下文中将分别以’Adam-R720’与’Eve-R740’代指。 注意！如果您不明白本页在说什么，请不要随意添加评论；不恰当的言论会使您进入黑名单；如果有技术上的问题，请联系flymeetomoon@gmail.com。Thanks♪(･ω･)ﾉ 几个请注意的点 v2.0@190731：增加tmux推荐 190331更新：不推荐xfce登录方式，鼓励“mimeopen -d ~ ”。 推荐注册实验楼网站账号，学习基础知识中的三门课程，这能够帮助你更快入门linux下的操作——况且这些课程用不了多长时间。 都2019年了，本人实在不推荐拿着U盘插服务器上——就算插也请插上面的VGA切换器——没错就是那个小黑盒子，按一次中间按钮就能在操作台无缝切换屏幕、键盘和鼠标到两个服务器上。上传资料参考步骤7. 请注意密码安全。详情参见步骤6. 使用MATLAB直接在命令行中输入’matlab’便可打开MATLAB2018a，如果调用matlab2016b（仅限服务器Adam-R720）请输入’/usr/local/MATLAB/R2016b/bin/matlab’。 登录教程下面是登录教程 首先检查你是否能够连接到该服务器。请在浏览器打开ftp://Adam-R720&#39;s IP。该IP请ctrl+f在本网页中搜索关键词’Adam’在评论区中得到。如图所示，本教程中该IP为125.223.125.6。 FTP服务已关闭，请在cmd中ping服务器对应ip地址检查。 如果你能连接到FTP网站ping通，证明你处在21楼局域网内，请跳到步骤2； 如果你的浏览器显示找不到链接，请检查是否处于21楼局域网内/是否点击信任了该网站/是否输对了Adam最新的IP地址。如果这些都没有问题，请来256检查对应服务器是否开机。 如下图所示，请下载推荐登录工具MobaXterm。当然你也可以选择Putty、VNC、Xshell等工具，但经过整体试用，还是Moba精简、免费且美观。本教程下文将以MobaXterm 10.4为例。 该软件为英文界面。你可以自行找到汉化版，但本人建议使用英文版。 请右键UserSession选择NewSession，选择SSH请到步骤4，选择RDP请到步骤8：前者是完全命令行界面，如果你只运行编译好的程序，或者使用MATLAB，已经足够了；后者配置了Xfce4图形界面，虽然不及Ubuntu标准的Gnome界面，但也足够好用。其他选项不推荐，在局域网下太卡或者不好用。 如下图所示，host填写你要连接的服务器其中一个的ip，用户名填写分配给你的用户名（如果没有请发邮件或者问学长学姐），SSH类型一般选择加速模式。请注意，Adam-R720的开放端口为2333，Eve-R740为23。此处填错一定会显示连接被拒绝。你可以在书签选项页中修改SessionName，这样下次登录更好记一些。（下次登录要是连接不上请返回步骤1。） 输入密码，回车，点击在本地保存密匙。请注意Linux下输入密码不会有任何显示。 如果显示下图证明登录成功，如果连接不上请返回步骤1，如果密码错误请重新输入。请注意，如果同一IP一定时间内连续输错五次密码IP便会拉黑的警告。 请注意不要像提示里那样升级系统；请注意红框内警告文字，请默念一句话泄密必被抓虽然这些资料或许没有那么重要，但只要有一份涉及到密级的文件泄露便是个人不能承受之重。所以本人建议诸位请不要把项目文件长期存储于本服务器上，得到阶段性成果后便定期清理痕迹与文件。如果你是第一次登陆该服务器，或者密码是弱密码，(什么是弱密码？）请尽快更改为包含数字、大小写字母和特殊字符的非规律密码。请不要将QQ、邮箱等关键账户的密码用于此处。此条建议和警告同样适用于你其他的账号密码。并且本人建议一年换一次密码，否则下面这图上下次可能就有你的名字。linux下更改密码方法请自行搜索。 Moba最方便的地方便是其左边栏就是ftp工具，你可以直接拖动文件到该处，便是上传到你所在用户名下的桌面上了。请输入’cd ~’到用户名桌面下，输入’ls’便可以找到你的文件。讲道理这不比U盘方便多了。 如何优雅的在terminal终端打开图形界面的文件管理器？ 解决方法1（推荐）: mimeopen -d ~ 其实可以替代大多数图形界面了，而且以terminal形式打开也很独立很快，优于xfce等远程桌面。 解决方法2: 在MobaXterm中更改设置 edit session -&gt; advanced SSH settings -&gt; remote environment -&gt; 选择Xfce4（推荐）或者别的。其余与步骤4相同。 由于各位系统不同，未必全部有用，请自行尝试。 之后请在原本的窗口而非弹出的新窗口输入密码。输入过程中密码不会显示。如果显示下图窗口，那么恭喜登陆成功。~~ 参考：xfce中open in Terminal怎么办？问题描述: ubuntu xfce failed to execute default terminal? Input/Output error.解决方法1: exo-preferred-applications -c然后选择xterminal。虽然这样颜色不好看但是起码能用。原因不明。 如果中间服务器断网了，我运行的命令岂不是白跑了？ 此处隆重推荐tmux终端复用/多命令窗口工具！只要新建一个tmux会话，只要不断电，你就能根据会话名字恢复之前的工作状态，真乃居家常备、旅行必备，移动办公之利器，也是很多程序员都推荐的，使用体验胜于同类型的screen。 运行相关命令： 启动新会话： tmux new -s 会话名 -n 窗口名. 恢复会话： tmux at -t 会话名. 列出所有会话： tmux ls. 关闭会话： tmux kill-session -t 会话名. tmux内命令键相关：原始命令键是ctrl+b，我一般修改为F12，因为F11是全屏，两者都接近。 tmux命令键 + ‘%’ # 垂直切分 Pane tmux命令键 + &quot; # 水平切分 Pane tmux命令键 + $ # 为当前 Session 命名 tmux命令键 + d # detach，退出 Tmux Session，回到父级 Shell tmux设置（需要root权限）：’sudo vim ~/.tmux.conf’ #~/.tmux.conf #屏蔽ctrl+b，修改为F12 unbind C-b set -g prefix f12 set -g status-utf8 on #允许鼠标，调整时间 set -g mouse on set-option -g escape-time 50 #r for &quot;reloaded!&quot; bind r source-file ~/.tmux.conf \; display &quot;Reloaded!&quot; set -g default-terminal &quot;screen-256color&quot; #vim类似的方向键 bind h select-pane -L bind j select-pane -D bind k select-pane -U bind l select-pane -R]]></content>
      <categories>
        <category>机械造物</category>
      </categories>
      <tags>
        <tag>server</tag>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>mobaxterm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[历史边角料：核潜艇发射卫星 History About Nuclear Submarine Launch Satellite]]></title>
    <url>%2FSubmarineLaunchSatellite%2F</url>
    <content type="text"><![CDATA[硕大的D4潜艇导弹发射筒图片来源：网络 1998年，第31期中文杂志《海外星云》上刊登了下面的一段新闻： 目前，俄罗斯武装力量各军兵种纷纷开辟财源以弥补国防经费的不足。对于俄罗斯海军来说，从战略核潜艇上用弹道导弹发射小型卫星，不但可以增加收入，还可以借此完成一次例行的军事训练；俄海军有充足的弹道导弹储备、发射可以不受天气条件的限制、相对较低的费用等对外国合作者也很有吸引力。 基于以上考虑，俄国防部会同俄经济部、俄宇航局、俄国家火箭中心一起于去年向俄联邦政府提交了用海军正在服役的弹道导弹为本国和外国合作者发射小型卫星的计划。今年4月7日，俄联邦政府正式批准了这一计划。根据该计划，俄罗斯海军北方舰队与德国柏林技术大学签订了发射该大学研制的小型科研卫星的合同，并把这次发射列入了1998年的战斗训练计划。今年7月7日，莫斯科时间7时15分，由潜射弹道导弹改装成的运载火箭从位于巴伦支海域水下的战略核潜艇“德沃莫斯科夫斯克号”上发射升空，把重量为10公斤的德国卫星成功地送入太空，卫星已开始正常工作。 从位于水下的战略核潜艇上用弹道导弹把卫星送入地球轨道，这在历史上还是第一次。 相信各位读者看到这里都是一脸懵逼的：“哈？卫星？”那么我们就从源头道来吧。 参加这次发射的“德沃莫斯科夫斯克号”（K-407，Новомосковск，国内也有翻译为“新莫斯科夫斯克号”），艇型号为667BDRM，北约代号D-4，苏联美名其为“海豚”，是名副其实的苏联海军核威慑力量中坚。至于这个消息，国内一般的翻译是：“1998年7月7日，K-407艇发射运载火箭“无风-1”型，搭载2枚德国的人造卫星并成功发射至近地轨道。这是世界上第一次由水下发射运载火箭搭载人造卫星进入近地轨道。” 这段翻译无疑是有问题的。所谓“无风”或者“静海”运载火箭，不过是“Shtil”的翻译错误，其真正的中文名字为“蓝天”，也就是著名的P-29RM型。如果提起它的北约代号恐怕大多数人都能想起来了：SS-N-23，“Skiff”“轻舟”弹道导弹——让西方闻声色变的导弹，其威力甚至超越“台风”级搭载的P-39型。 至于这次发射，其实是多国组建的“海上发射公司”（Sea Launch）的商业发射之一。官方的数据显示，至2008年9月，海上发射公司共发射了29枚火箭，26枚成功，1个只取得部分成功。有趣的是，该公司总经理Jim Maser于06年3月宣布离开该公司加入SpaceX公司担任首席运营官。看来有创造力的人永远能找到有趣的事业。 而K-407艇无疑是俄罗斯海军也是前苏联海军的明星艇。其服役期间执行了多次著名的发射和试验任务，比如人类史上唯一一次的“末日彩排”导弹齐射演习： 末日演习图片来源：网络 “在前苏联解体四个月前，1991年8月6日，诺沃莫斯科夫斯克号（K-407）执行任务代号巨兽-2（Behemoth-2）的16枚弹道导弹连发任务， K-407在实验之前也改装了一定的测量设备来记录数据。潜艇以15秒左右一发的速度把所有的导弹成功的发射了出去，第一发和第二发成功的击中了靶场的目标，其他导弹在成功升空之后在安全高度进行了自毁。” 这次实验也成为人类历史上唯一一次成功的弹道导弹核潜艇全弹发射实验，向对苏联磨刀霍霍的西方国家发出了一个明确的信号：即使苏联此时已是垂死巨兽，但是最后一次的全力怒吼仍然能将所谓的“民主国家”们送入地狱。 说了那么多，其实使用潜射弹道导弹发射卫星对于“战斗民族”俄罗斯人来说并不是第一次，只不过在国内新闻比较少而且年代都很久远的原因罢了。早在1995年，K-44艇在巴伦支海区便发射过装载科研模块的“波浪”运载火箭，这个科研模块由德国不来梅大学研制。飞行20分钟后落在堪察加。而K-496号潜艇于2005年6月22日从巴伦支海发射“波浪”运载火箭，火箭上搭载了“宇宙1号”太阳帆飞船，可惜发射后运载火箭与卫星脱离失败，最终坠入大气层。 上述两艇皆是D3（德尔塔3）级弹道导弹核潜艇，算的上D4级的前辈了。其本身搭载的是P-29R导弹系统，也就是PSM-50型弹道导弹，北约代号是SS-N-18，“Stingray”（黄貂鱼）。因此上文中提到的“波浪”运载火箭，其实就是P-29P的特别改装型。 摩尔曼斯克的俄罗斯潜艇基地，近处为两艘D4级，接着是A级“阿尔法”攻击型核潜艇，远处可以看到最近下水的俄罗斯新一代SSBN“北风之神”级图片来源：https://navy-korabel.livejournal.com/ 20世纪90年代初，俄海军总司令部决定将部分PSM-50型导弹改装成波浪号运载火箭，以承揽国际商业发射业务。波浪号运载火箭可安装在现役潜艇的导弹发射器中，并由潜艇运至适于火箭发射的海域。发射时，潜艇可下潜至海平面以下60米处。“波浪”型火箭为两级运载火箭。点火后，两级火箭发动机可先后启动，将小型卫星送入近地轨道。此外，经改装的“波浪”型火箭目前可在俄罗斯阿尔汉格尔斯克地区的导弹试验场发射升空。截至目前，俄总共发射过４枚波浪号运载火箭，且均告成功。 看来俄罗斯海军确实有段艰苦的日子，毕竟众所周知的一点是，如果要发射卫星，最好要从接近赤道的地方，这样最能节省火箭能量，来提供有效载荷。所以上文所说的卫星发射，恐怕还有一个世界第一：那就是从纬度最高的地方发射卫星。这恐怕是俄罗斯人不愿意让弹道导弹核潜艇离开自己的堡垒海域的结果吧。当然最终结果便是，此类发射商用前景极其有限，之后再也没有类似案例，而这段历史终归隐藏在故纸堆里被人类遗忘。 后记：此篇文章是本人于16年5月原稿的修改版，原稿曾经发表在现在已经凉透了的三海一核网站、知乎还有一些公众号上，因此如果似曾相识，请不要惊讶。感谢您的阅读。本文采用BY-NC-SA 4.0协议进行许可，分享、演绎需署名且使用相同方式共享。转载请务必保留本页网址和作者信息，否则即为侵权。]]></content>
      <categories>
        <category>大舰巨炮</category>
      </categories>
      <tags>
        <tag>submarine</tag>
        <tag>satellite</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[R.E.W.团队服务器IP All About Team R.E.W. Server]]></title>
    <url>%2FIP%2F</url>
    <content type="text"><![CDATA[此页为R.E.W.团队成员设立。诸位可以通过检查本页评论区最新评论，获得两台服务器最新的ip地址。这两台服务器分别是DELL POWEREDGE R720与R740。评论中将分别以’Adam’与’Eve’代指。 如果你的浏览器无法显示本网页评论区（比如本页最后显示code xxx），请卸载掉中国流氓公司基于chromium开发的浏览器（比如360浏览器、搜狗浏览器），改用Firefox或者Chrome（你可以通过校园网ipv6直连谷歌，然后使用abp、油猴等插件取得明显优于流氓浏览器的广告屏蔽、美化效果、使用体验）；如果提示网页链接内容不够私密，请点击网页下方的more，选择继续访问并信任本网站。 注意！如果您不明白本页在说什么，请不要随意添加评论；不恰当的言论会使您进入黑名单；如果有技术上的问题，请联系Rinabell。Thanks♪(･ω･)ﾉ 关于如何连接服务器、使用本网页提供资源，请参考该网页。 190117更新：现在256所有人（除将毕业的师姐）都可以登录R720服务器了！用户名为学号，密码为:plzchangepasswd 。（意思就是请尽快更改你的密码！）目前新建用户应该都是sodoer，所以请谨慎操作。请注意，该服务器GPU同一时间内可能只支持一个人使用（MATLAB就随便了）。]]></content>
      <categories>
        <category>机械造物</category>
      </categories>
      <tags>
        <tag>tech</tag>
        <tag>server</tag>
        <tag>linux</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于博客内容 AboutThisBlog]]></title>
    <url>%2FAboutBlog%2F</url>
    <content type="text"><![CDATA[当你凝视深渊，深渊也在凝视你 题图画师：科学-余生不过两万天/原作p站id=65475029 什么是【主观】标签？在本博客中您可能经常看到【主观】标签。因为Nuko本人坚信个人博客流量主要来源为搜索引擎，而大多数人至此目的是为了解决问题而非消遣时间——本博客主要内容也是解决现有问题。既然如此，便不应带有主观情绪而是陈述事实。因此凡是包含客观条件无法检验的段落内容我都会标注【主观】标签。 为什么你的博文经常很短、采用自问自答的形式？因为无论是csdn还是别的中文博客网站，亦或者一些技术论坛（典型者比如中文matlab论坛），普遍存在着相似内容极其泛滥的情况。虽然他们确实清理了简单转发的文章，但当你通过搜索引擎寻找解决问题的方法时，仍然会出现点开一整页搜索结果，发现内容都是之前你已经看过的、不好使的方法的复制粘贴；又或者明明是一些人主观的、极其不系统的学习笔记，明明前人杰出的教程汗牛充栋，却啰里啰嗦的贴在网上，也不管有没有人对其感兴趣，结果便是当你搜索一些相关的问题时，全是这种不明确开发环境、问题和需求的“账本”。前者，上纲上线便是“洗稿”；后者，严肃的讲是为“制造拥堵”。这极大的影响了国内研究环境。因此本博客不会重复网上已经有的教程、解决方法等，而是针对某一问题来提供当时公开渠道搜索不到的解决方法。相对应的，这些技术文章便不会有起承转合的结构，而是单刀直入提供解决方案。 为什么要写个人博客而不是在csdn、知乎、各种公众号上发文章？这些平台我基本都试过，但其不足之处很多。总的来说，因为这样技术文章不会被降权、影响到各位搜索到；而且也能锻炼自己。 不过分过滤的内容平台才能引起繁荣。语承上文，很多人在接触到谷歌后会发现学习效率得到了极大提升，这不仅仅是因为广告少等原因（ABP等工具对国内引擎已经有很好的过滤效果），更重要的是众多大佬们的个人博客会被国内搜索引擎过滤、降低比重值，很多人更是懒得设置国内分流使得其被百度等收录。尤其遗憾的是，很多中文平台只要是包含ss等敏感词的博文，要么会直接删除，要么会在搜索引擎中加以屏蔽，哪怕是纯技术相关。由于相关高压线的存在，各个平台为了不影响市场前景，普遍采取的是比官方更加严格的管理手段，这使得相关平台内容质量迅速劣化（知乎卖身后迅速赶走一些提供高质量内容的敏感用户便是典型例子），更使得技术性讨论只能在各个半公开论坛小众进行。 不封闭的、易于检索的内容平台才适合技术性讨论。非常遗憾的是，由于国内互联网正处于资本驱动下的托拉斯转型为康采恩的时期，各个巨头视用户创造的数据为自己私有的财富（所谓“大数据”），各大巨头间的信息壁垒极其之高，因而发布在各个公众号平台的技术性文章互相难以打破壁垒，增加了诸位寻找解决方法的时间成本。更不用说，有一些平台（典型者如微博）以引发争论、煽动情绪为运营目标。再次重申，Nuko并不反对适当的内容管制筛选和情绪释放，如果强行比喻，“情绪导向”之于智慧本身又如“性”之于“爱”，前者只是调味品而非食材本身，不是后者的全部。 【主观】技术内容平台不需要意见领袖。现实表明，任何内容平台一定会产生意见领袖，正如选主政治必定会产生政党和候选人一样。这是马克思所说人格物化的一种，是内卷引发的过度娱乐化的悲哀，是资本制造偶像的一种典型表现。这种集中式的博弈和发展注定会崩坏，正如所有偶像注定会消失光环一样。但如此反复对人类智力的浪费，使得公众沦为不关注“事实”而是“情绪”的“乌合之众”，不但不符合Nuko本人的观念，相信也不符合很多人的共同观念。技术平台只需要事实和真相，我/你/我们需要为分布式的、补完的未来从当下开始做准备。 这么说你很勇咯？居然敢批评政策和人性？一口一个你自己高雅的词？【主观】Nuko超勇的好不好！ 好了这是开玩笑。严肃的来讲，就算现实是灰色雾蒙蒙的、人类只能踩在地球上依赖化石能源，Nuko坚信，真正的智者、想要自我实现的人，必定也能分清黑白、心灵超越星空。就算现实中种种问题“存在必定是合理”，Nuko坚信，我/你/我们仍然不能浑浑噩噩的重复一天365遍，而是应该活过365天。就算看的透彻或许会使人不快乐、不被理解，Nuko坚信仍然有能够理解我/你/我们的灵魂存在，在先哲的书中、在分布式的超级计算机里、在人类思维凝结成的网络中。毕竟，从某种角度上来说，我/你/我们都是这些模因的载体，并如借助基因传递延续我/你/我们的生命一样，借助模因的传递延续我/你/我们的灵魂和思想。 什么是“我/你/我们”？【主观】那Nuko一定要强烈安利阿西莫夫的《基地》系列了。“我/你/我们”便是改自其中盖娅的“我/我们/盖娅”。（毕竟人类技术水平目前支撑不起盖娅。）Nuko坚信“盖娅文明”同“共产主义”、“人类补完”是未来人类智能战胜(或者你可以叫“融合”)人工智能的必要条件和最终结果。当然，对于一部分人来说，这个结果或许可以叫做“大审判”？开玩笑hhh Nuko是什么？Rinabell呢？【主观】Nuko的介绍请见相关界面。至于Rinabell，现实中你可能会给他贴上各种标签。比如知乎、超大来的朋友可能会认为他是多炮塔党人；一些论坛来的朋友将他引以为马克思主义者同道，并将其无政府主义倾向批判一番开除左籍！；另一些论坛来的朋友大概是来看破解方法和滤镜照片；朋友圈的朋友大概已经习惯了此人的日常精分；他的室友认为他是没救的死宅；豆瓣过来的大概都是为了吵架吧；QQ的老朋友或许会觉得此人情感泛滥；Steam还有游戏上的朋友们可能被他不常见的一面吓到过。但终归还是那句话，“由于宇宙借你我等智慧生物进行自我观察，Who I am depends on who you are.”]]></content>
      <categories>
        <category>雨滴之歌</category>
      </categories>
      <tags>
        <tag>开篇词</tag>
        <tag>introduction</tag>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
